{"version":3,"file":"static/js/195.c965a9a8.chunk.js","mappings":"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","sources":["components/service/api.js","components/goBackBtn/GoBackBtn.styled.jsx","components/goBackBtn/GoBackButton.jsx","components/movieDetails/MovieDetails.styled.jsx","components/movieDetails/MovieDetails.jsx","pages/MoviesDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\n// створюємо екземпляр класу axios, щоб не повторювати у всіх запитах однакові дані\n// для цього використовуємо метод класу сreate\nconst moviesAPI = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'f0f166877cbfe2faaaf5ad4de4d845ef',\n  },\n});\n\n// ----------------------------------Trend-----------------\nexport const APIgetTrandingMovies = async () => {\n  const media_type = 'movie';\n  const time_window = 'day';\n  // тут через get витягуємо створені дані і дописуємо що потрібно для конкретного запиту\n  const response = await moviesAPI.get(`trending/${media_type}/${time_window}`);\n  const { data } = response;\n\n  return data.results;\n};\n\n// ----------------------------------Search----------------------------\nexport const APIsearchMovies = async query => {\n  // тут додаткого додаємо ще один аргумент-обʼєкт params, куди передаємо дані для рядка запиту\n  const response = await moviesAPI.get('/search/movie', { params: { query } });\n  const { data } = response;\n  return data.results;\n};\n\n// -----------------------------------Details----------------------------\nexport const APImovieDetails = async movieId => {\n  const response = await moviesAPI.get(`movie/${movieId}`);\n  const { data } = response;\n\n  return data;\n};\n\n// -----------------------------------Cast--------------------------------\nexport const APImovieDetailsCast = async movieId => {\n  const response = await moviesAPI.get(`movie/${movieId}/credits`);\n  const { data } = response;\n\n  return data.cast;\n};\n\n// -----------------------------------Review-------------------------------\nexport const APImovieDetailsReviews = async movieId => {\n  const response = await moviesAPI.get(`movie/${movieId}/reviews`);\n  const { data } = response;\n\n  return data.results;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledBackBtn = styled(Link)`\n  display: block;\n\n  width: 90px;\n  padding: 8px 16px;\n  margin: 15px 0;\n\n  border-radius: 4px;\n  text-decoration: none;\n  text-align: center;\n  font-weight: 500;\n  text-transform: uppercase;\n  color: #07893f;\n  &:hover,\n  :focus {\n    background-color: #b6f6b6;\n    transition: all 0.3s ease-in-out;\n    filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n  }\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { StyledBackBtn } from './GoBackBtn.styled';\n\nconst GoBackButton = () => {\n  const location = useLocation();\n\n  return (\n    <StyledBackBtn to={location.state?.from ?? '/'} type=\"button\">\n      Go Back\n    </StyledBackBtn>\n  );\n};\n\nexport default GoBackButton;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieDetailsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 25px;\n  padding-bottom: 10px;\n  margin-bottom: 10px;\n  border-bottom: solid 3px rgba(0, 0, 0, 0.14);\n`;\n\nexport const MovieDetailTextWrapper = styled.div`\n  display: flex;\n    flex-direction: column;\n    gap: 30px;\n`;\n\nexport const MovieTitle = styled.h2`\n  margin-bottom: 40px;\n  font-size: 30px;\n  color: #03390c;\n`;\n\nexport const WrapperTitle = styled.h3`\n  margin-bottom: 10px;\n  font-size: 20px;\n  color: #03390c;\n`;\nexport const WrapperText = styled.p`\n  margin-bottom: 10px;\n  font-size: 18px;\n  color: #03390c;\n`;\nexport const LinkWrapper = styled.div`\n  display: flex;\n  gap: 5px;\n\n  margin-bottom: 10px;\n  padding: 15px 0;\n\n  border-bottom: solid 3px rgba(0, 0, 0, 0.14);\n`;\n\nexport const MovieNavLink = styled(NavLink)`\n  padding: 5px 10px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: #0dc456;\n  font-weight: 500;\n\n  &.active,\n  :hover,\n  :focus {\n    color: #07893f;\n    border-bottom: solid 1px green;\n    transition: all 0.3s ease-in-out;\n    filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { APImovieDetails } from 'components/service/api';\nimport {\n  LinkWrapper,\n  MovieDetailsWrapper,\n  MovieDetailTextWrapper,\n  MovieNavLink,\n  MovieTitle,\n  WrapperTitle,\n  WrapperText,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [error, setError] = useState(null);\n  const [title, setTitle] = useState('');\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState('');\n  const [poster, setPoster] = useState('');\n  const [releaseDate, setReleaseDate] = useState('');\n  const [score, setScore] = useState(null);\n  const location = useLocation();\n\n  // називаємо так як у app. БО USEPARAMS ПОВЕРТАЄ ДИНАМІЧНІ ПАРАМЕТРИ URL-РЯДКА!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const getMoviesDetails = async () => {\n      try {\n        setError(null);\n        const results = await APImovieDetails(movieId);\n        const {\n          poster_path,\n          original_title,\n          overview,\n          genres,\n          vote_average,\n          release_date,\n        } = results;\n\n        const date = new Date(release_date);\n        const poster = poster_path\n          ? `https://image.tmdb.org/t/p/w300${poster_path}`\n          : 'https://via.placeholder.com/300x574?text=Sorry+No+Poster';\n\n        setScore(vote_average.toFixed(1));\n        setTitle(original_title);\n        setOverview(overview);\n        setPoster(poster);\n        setGenres(genres.map(el => el.name).join('  '));\n        setReleaseDate(date.getFullYear());\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    getMoviesDetails();\n  }, [movieId]);\n\n  return (\n    <>\n      {error !== null && <p>Oops, some error occurred... Message: {error}</p>}\n      <MovieDetailsWrapper>\n        <img src={poster} alt={title} />\n\n        <MovieDetailTextWrapper>\n          <div>\n            <MovieTitle>\n              {title} ({releaseDate})\n            </MovieTitle>\n            <WrapperText>User score: {score}%</WrapperText>\n          </div>\n\n          <div>\n            <WrapperTitle>Overview</WrapperTitle>\n            <WrapperText>{overview}</WrapperText>\n          </div>\n\n          <div>\n            <WrapperTitle>Genres</WrapperTitle>\n            <WrapperText>{genres}</WrapperText>\n          </div>\n        </MovieDetailTextWrapper>\n      </MovieDetailsWrapper>\n\n      <h2>Additional inform</h2>\n      \n      <LinkWrapper>\n        <MovieNavLink to={'cast'} state={location.state}>\n          Cast\n        </MovieNavLink>\n        <MovieNavLink to={'review'} state={location.state}>\n          Review\n        </MovieNavLink>\n      </LinkWrapper>\n    </>\n  );\n};\nexport default MovieDetails;\n","import React, { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\n\nimport Loader from 'components/loader/Loader';\nimport GoBackButton from 'components/goBackBtn/GoBackButton';\nimport MovieDetails from 'components/movieDetails/MovieDetails';\n\nconst MoviesDetailsPage = () => {\n  return (\n    <>\n      <GoBackButton />\n      <MovieDetails />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MoviesDetailsPage;\n"],"names":["moviesAPI","axios","baseURL","params","api_key","APIgetTrandingMovies","get","response","data","results","APIsearchMovies","query","APImovieDetails","movieId","APImovieDetailsCast","cast","APImovieDetailsReviews","StyledBackBtn","styled","Link","location","useLocation","to","state","from","type","MovieDetailsWrapper","MovieDetailTextWrapper","MovieTitle","WrapperTitle","WrapperText","LinkWrapper","MovieNavLink","NavLink","useState","error","setError","title","setTitle","overview","setOverview","genres","setGenres","poster","setPoster","releaseDate","setReleaseDate","score","setScore","useParams","useEffect","getMoviesDetails","poster_path","original_title","vote_average","release_date","date","Date","toFixed","map","el","name","join","getFullYear","message","src","alt","Suspense","fallback","Loader"],"sourceRoot":""}
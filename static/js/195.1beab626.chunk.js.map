{"version":3,"file":"static/js/195.1beab626.chunk.js","mappings":"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","sources":["components/service/api.js","components/goBackBtn/GoBackBtn.styled.jsx","components/goBackBtn/GoBackButton.jsx","components/movieDetails/MovieDetails.styled.jsx","components/movieDetails/MovieDetails.jsx","pages/MoviesDetailsPage.jsx","pages/notFoundPage/NotFoundPage.styled.jsx","pages/notFoundPage/NotFoundPage.jsx"],"sourcesContent":["import axios from 'axios';\n\n// створюємо екземпляр класу axios, щоб не повторювати у всіх запитах однакові дані\n// для цього використовуємо метод класу сreate\nconst moviesAPI = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'f0f166877cbfe2faaaf5ad4de4d845ef',\n  },\n});\n\n// ----------------------------------Trend-----------------\nexport const APIgetTrandingMovies = async () => {\n  const media_type = 'movie';\n  const time_window = 'day';\n  // тут через get витягуємо створені дані і дописуємо що потрібно для конкретного запиту\n  const response = await moviesAPI.get(`trending/${media_type}/${time_window}`);\n  const { data } = response;\n\n  return data.results;\n};\n\n// ----------------------------------Search----------------------------\nexport const APIsearchMovies = async query => {\n  // тут додаткого додаємо ще один аргумент-обʼєкт params, куди передаємо дані для рядка запиту\n  const response = await moviesAPI.get('/search/movie', { params: { query } });\n  const { data } = response;\n  \n  return data.results;\n};\n\n// -----------------------------------Details----------------------------\nexport const APImovieDetails = async movieId => {\n  const response = await moviesAPI.get(`movie/${movieId}`);\n  const { data } = response;\n\n  return data;\n};\n\n// -----------------------------------Cast--------------------------------\nexport const APImovieDetailsCast = async movieId => {\n  const response = await moviesAPI.get(`movie/${movieId}/credits`);\n  const { data } = response;\n\n  return data.cast;\n};\n\n// -----------------------------------Review-------------------------------\nexport const APImovieDetailsReviews = async movieId => {\n  const response = await moviesAPI.get(`movie/${movieId}/reviews`);\n  const { data } = response;\n\n  return data.results;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledBackBtn = styled(Link)`\n  display: block;\n\n  width: 90px;\n  padding: 8px 16px;\n  margin: 15px 0;\n\n  border-radius: 4px;\n  text-decoration: none;\n  text-align: center;\n  font-weight: 500;\n  text-transform: uppercase;\n  color: #07893f;\n  &:hover,\n  :focus {\n    background-color: #b6f6b6;\n    transition: all 0.3s ease-in-out;\n    filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n  }\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { StyledBackBtn } from './GoBackBtn.styled';\n\nconst GoBackButton = () => {\n  const location = useLocation();\n\n  return (\n    <StyledBackBtn to={location.state?.from ?? '/'} type=\"button\">\n      Go Back\n    </StyledBackBtn>\n  );\n};\n\nexport default GoBackButton;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieDetailsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 25px;\n  padding-bottom: 10px;\n  margin-bottom: 10px;\n  border-bottom: solid 3px rgba(0, 0, 0, 0.14);\n`;\n\nexport const MovieDetailTextWrapper = styled.div`\n  display: flex;\n    flex-direction: column;\n    gap: 30px;\n`;\n\nexport const MovieTitle = styled.h2`\n  margin-bottom: 40px;\n  font-size: 30px;\n  color: #03390c;\n`;\n\nexport const WrapperTitle = styled.h3`\n  margin-bottom: 10px;\n  font-size: 20px;\n  color: #03390c;\n`;\nexport const WrapperText = styled.p`\n  margin-bottom: 10px;\n  font-size: 18px;\n  color: #03390c;\n`;\nexport const LinkWrapper = styled.div`\n  display: flex;\n  gap: 5px;\n\n  margin-bottom: 10px;\n  padding: 15px 0;\n\n  border-bottom: solid 3px rgba(0, 0, 0, 0.14);\n`;\n\nexport const MovieNavLink = styled(NavLink)`\n  padding: 5px 10px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: #0dc456;\n  font-weight: 500;\n\n  &.active,\n  :hover,\n  :focus {\n    color: #07893f;\n    border-bottom: solid 1px green;\n    transition: all 0.3s ease-in-out;\n    filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport {\n  LinkWrapper,\n  MovieDetailsWrapper,\n  MovieDetailTextWrapper,\n  MovieNavLink,\n  MovieTitle,\n  WrapperTitle,\n  WrapperText,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails({\n  poster_path,\n  original_title,\n  overview,\n  genres,\n  vote_average,\n  release_date,\n}) {\n  const location = useLocation();\n  const date = new Date(release_date).getFullYear();\n  const poster = poster_path\n    ? `https://image.tmdb.org/t/p/w300${poster_path}`\n    : 'https://via.placeholder.com/300x450?text=Sorry+No+Poster';\n  const score = vote_average.toFixed(1);\n  const stringOfGenres = genres.map(el => el.name).join('  ');\n\n  return (\n    <>\n      <MovieDetailsWrapper>\n        <img src={poster} alt={original_title} />\n\n        <MovieDetailTextWrapper>\n          <div>\n            <MovieTitle>\n              {original_title} ({date})\n            </MovieTitle>\n            <WrapperText>User score: {score}%</WrapperText>\n          </div>\n\n          <div>\n            <WrapperTitle>Overview</WrapperTitle>\n            <WrapperText>{overview}</WrapperText>\n          </div>\n\n          <div>\n            <WrapperTitle>Genres</WrapperTitle>\n            <WrapperText>{stringOfGenres}</WrapperText>\n          </div>\n        </MovieDetailTextWrapper>\n      </MovieDetailsWrapper>\n\n      <h2>Additional inform</h2>\n\n      <LinkWrapper>\n        <MovieNavLink to={'cast'} state={location.state}>\n          Cast\n        </MovieNavLink>\n        <MovieNavLink to={'review'} state={location.state}>\n          Review\n        </MovieNavLink>\n      </LinkWrapper>\n    </>\n  );\n}\n\nMovieDetails.propTypes = {\n  poster_path: PropTypes.string,\n  original_title: PropTypes.string.isRequired,\n  overview: PropTypes.string.isRequired,\n  genres: PropTypes.array.isRequired,\n  vote_average: PropTypes.number.isRequired,\n  release_date: PropTypes.string.isRequired,\n};\n","import React, { Suspense, useState, useEffect } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { APImovieDetails } from 'components/service/api';\nimport Loader from 'components/loader/Loader';\nimport GoBackButton from 'components/goBackBtn/GoBackButton';\nimport MovieDetails from 'components/movieDetails/MovieDetails';\nimport NotFoundPage from 'pages/notFoundPage/NotFoundPage';\n\nexport default function MoviesDetailsPage() {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) <NotFoundPage />;\n\n    const getMoviesDetails = async () => {\n      try {\n        const results = await APImovieDetails(movieId);\n        setMovie(results);\n\n      } catch (error) {\n        toast.error(`Oops, some error occurred... Message: ${error.message}`);\n        // alert(`Oops, some error occurred... Message: ${error}`)\n      }\n    };\n    getMoviesDetails();\n  }, [movieId]);\n\n  return (\n    <>\n      {movie ? (\n        <>\n          <GoBackButton />\n          <MovieDetails {...movie} />\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </>\n      ) : (\n        <NotFoundPage />\n      )}\n    </>\n  );\n}\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  padding: 5px 20px;\n\n  text-decoration: none;\n  border: solid 1px #0cdf60;\n  border-radius: 5px;\n\n  color: #564444;\n  background-color: #b6f6b6;\n\n  &:hover,\n  &:focus {\n    color: #07893f;\n    transition: all 0.3s ease-in-out;\n    filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n  }\n`;\n\nexport const StyledNotFoundPage = styled.h1`\n  display: flex;\n  gap: 15px;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\ntext-align: center;\n  height: 70vh;\n  margin-bottom: 40px;\n\n  font-size: 40;\n  color: #564444;\n`;\n","import React, { Suspense } from 'react';\n\nimport Loader from 'components/loader/Loader';\nimport { Container } from 'layout/layout/Layout.styled';\nimport { StyledNotFoundPage, StyledLink } from './NotFoundPage.styled';\n\nexport default function NotFoundPage () {\n  return (\n    <Suspense fallback={<Loader />}>\n      <Container>\n        <StyledNotFoundPage>\n          This page was not found. You can try to come back to the\n          <StyledLink to={'/'}>Home page</StyledLink>\n        </StyledNotFoundPage>\n      </Container>\n    </Suspense>\n  );\n};"],"names":["moviesAPI","axios","baseURL","params","api_key","APIgetTrandingMovies","get","response","data","results","APIsearchMovies","query","APImovieDetails","movieId","APImovieDetailsCast","cast","APImovieDetailsReviews","StyledBackBtn","styled","Link","location","useLocation","to","state","from","type","MovieDetailsWrapper","MovieDetailTextWrapper","MovieTitle","WrapperTitle","WrapperText","LinkWrapper","MovieNavLink","NavLink","MovieDetails","poster_path","original_title","overview","genres","vote_average","release_date","date","Date","getFullYear","poster","score","toFixed","stringOfGenres","map","el","name","join","src","alt","MoviesDetailsPage","useState","movie","setMovie","useParams","useEffect","NotFoundPage","getMoviesDetails","toast","message","Suspense","fallback","Loader","StyledLink","StyledNotFoundPage"],"sourceRoot":""}